{"ast":null,"code":"var e,\n    t = (e = require(\"react\")) && \"object\" == typeof e && \"default\" in e ? e.default : e;\n\nmodule.exports = function (e) {\n  var a = e.src,\n      c = e.hoverSrc,\n      l = e.style,\n      n = e.disabled,\n      o = e.onClick,\n      s = e.className,\n      u = t.useState(a),\n      r = u[0],\n      i = u[1],\n      f = t.useCallback(function () {\n    i(c);\n  }, []),\n      d = t.useCallback(function () {\n    i(a);\n  }, []);\n  return t.createElement(\"img\", {\n    src: r,\n    style: l,\n    onMouseOver: f,\n    onMouseOut: d,\n    onClick: function (e) {\n      o && (n || o(e));\n    },\n    className: s\n  });\n};","map":{"version":3,"sources":["../src/index.tsx"],"names":["src","hoverSrc","style","disabled","onClick","className","imageSrc","setImageSrc","React","useState","mouseOver","useCallback","mouseOut","e","onMouseOver","onMouseOut"],"mappings":";;;iBAU8C,UAAA,CAAA,EAAA;AAAA,MAC5CA,CAAAA,GAAAA,CAAAA,CAAAA,GAD4C;AAAA,MAE5CC,CAAAA,GAAAA,CAAAA,CAAAA,QAF4C;AAAA,MAG5CC,CAAAA,GAAAA,CAAAA,CAAAA,KAH4C;AAAA,MAI5CC,CAAAA,GAAAA,CAAAA,CAAAA,QAJ4C;AAAA,MAK5CC,CAAAA,GAAAA,CAAAA,CAAAA,OAL4C;AAAA,MAM5CC,CAAAA,GAAAA,CAAAA,CAAAA,SAN4C;AAAA,MAM5CA,CAAAA,GAEgCG,CAAAA,CAAMC,QAAND,CAAuBR,CAAvBQ,CARY;AAAA,MAQrCF,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CARqC;AAAA,MAQ3BC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAR2B;AAAA,MAUtCG,CAAAA,GAAYF,CAAAA,CAAMG,WAANH,CAAkB,YAAA;AAClCD,IAAAA,CAAAA,CAAYN,CAAZM,CAAAA;AAAYN,GADIO,EAEf,EAFeA,CAV0B;AAAA,MActCI,CAAAA,GAAWJ,CAAAA,CAAMG,WAANH,CAAkB,YAAA;AACjCD,IAAAA,CAAAA,CAAYP,CAAZO,CAAAA;AAAYP,GADGQ,EAEd,EAFcA,CAd2B;AAyB5C,SACEA,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AACER,IAAAA,GAAAA,EAAKM,CADPE;AAEEN,IAAAA,KAAAA,EAAOA,CAFTM;AAGEM,IAAAA,WAAAA,EAAaJ,CAHfF;AAIEO,IAAAA,UAAAA,EAAYH,CAJdJ;AAKEJ,IAAAA,OAAAA,EAbgB,UAACS,CAAD,EAACA;AACdT,MAAAA,CAAAA,KACAD,CAAAA,IACHC,CAAAA,CAAQS,CAART,CAFGA,CAAAA;AAEKS,KAKVL;AAMEH,IAAAA,SAAAA,EAAWA;AANbG,GAAAA,CADF;AAOeH,C","sourcesContent":["import React from \"react\";\n\nexport type HoverImageProps = {\n  src: string;\n  hoverSrc: string;\n  disabled?: boolean;\n  className?: string;\n  style?: any;\n  onClick?: React.MouseEventHandler;\n};\nconst HoverImage: React.FC<HoverImageProps> = ({\n  src,\n  hoverSrc,\n  style,\n  disabled,\n  onClick,\n  className,\n}) => {\n  const [imageSrc, setImageSrc] = React.useState<string>(src);\n\n  const mouseOver = React.useCallback(() => {\n    setImageSrc(hoverSrc);\n  }, []);\n\n  const mouseOut = React.useCallback(() => {\n    setImageSrc(src);\n  }, []);\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (!onClick) return;\n    if (!disabled) {\n      onClick(e);\n    }\n  };\n\n  return (\n    <img\n      src={imageSrc}\n      style={style}\n      onMouseOver={mouseOver}\n      onMouseOut={mouseOut}\n      onClick={handleClick}\n      className={className}\n    />\n  );\n};\n\nexport default HoverImage;\n"]},"metadata":{},"sourceType":"script"}